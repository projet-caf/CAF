<?php

namespace CAF\ContentBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContentRepository extends EntityRepository
{

	public function lastArticles($limit)
	{
		return $this->getEntityManager()
					->createQueryBuilder('c,t')
					->Select('c,t')
					->from('CAFContentBundle:Content','c')
					->leftjoin('c.translations', 't')
					->orderby('t.created', 'DESC')
					->setFirstResult(0)
					->setMaxResults($limit)
					->getQuery()
					->getResult();
	}

	public function findAllOrder($page,$nb_elem = 20,$taxonomy = -1)
    {
        $offset = ($page-1)*$nb_elem;
        if($offset < 0)
            $offset=0;
        $offset = $offset*3;
        if($nb_elem==-1)
        	$nb_elem=20;
        $max = $nb_elem*3;
      	if ($taxonomy == -1) {
      		return $this->getEntityManager()
				->createQueryBuilder('c,t')
				->Select('c,t')
				->from('CAFContentBundle:Content','c')
				->leftjoin('c.translations', 't')
				->orderby('t.created', 'DESC')
				->setFirstResult($offset)
				->setMaxResults($max)
				->getQuery()
				->getResult();	
      	} else {
      		return $this->getEntityManager()
				->createQueryBuilder('c,t')
				->Select('c,t')
				->from('CAFContentBundle:Content','c')
				->leftjoin('c.translations', 't')
				->leftjoin('c.id_content_taxonomy', 'ct')
				->where('ct.id=:taxonomy')
				->orderby('t.created', 'DESC')
				->setParameter('taxonomy',$taxonomy)
				->setFirstResult($offset)
				->setMaxResults($max)
				->getQuery()
				->getResult();
      	}
        
    }

    public function getPagination($nb_elem_page) {
    	$nb_elem = $this->getEntityManager()
					->createQueryBuilder('c,t')
					->Select('count(c)')
					->from('CAFContentBundle:Content','c')
					->leftjoin('c.translations', 't')
					->orderby('t.updated', 'DESC')
					->getQuery()
					->getSingleResult();
    	$nb_elem = current($nb_elem);
        $nb_elem_page = $nb_elem_page*3;
    	return ceil($nb_elem/$nb_elem_page);
    }

    public function getContents($limit_value,$cat,$lang) {
    	return $this->getEntityManager()
    				->createQueryBuilder('c,t')
    				->Select('c,t')
    				->from('CAFContentBundle:Content','c')
    				->leftjoin('c.translations', 't')
    				->leftjoin('t.categories','cat')
    				->join('t.lang','l')
    				->where('cat.id=:cat AND l.code=:lang')
					->orderby('t.updated', 'DESC')
					->setParameters(array('cat' => $cat,'lang'=>$lang))
					->setMaxResults($limit_value)
					->getQuery()
					->getResult();
    }

    public function getAllOrderByTitle() {
    	return $this->getEntityManager()
    				->createQueryBuilder('c,t')
    				->Select('c,t')
    				->from('CAFContentBundle:Content','c')
    				->leftjoin('c.translations', 't')
    				->join('t.lang','l')
    				->where('l.code=:lang')
					->orderby('t.title', 'DESC')
					->setParameter('lang','fr')
					->getQuery()
					->getResult();
    }

    public function getCanonical($id) {
        return $this->getEntityManager()
                    ->createQueryBuilder('mv')
                    ->Select('mv.value')
                    ->from('CAFContentBundle:MetasValue','mv')
                    ->leftjoin('mv.content_translation','c')
                    ->leftjoin('mv.meta','m')
                    ->where('c.id=:id')
                    ->setParameter('id',$id)
                    ->andwhere('m.name=:name')
                    ->setParameter('name','Url')
                    ->getQuery()
                    ->getResult();
    }

}